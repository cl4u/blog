import{_ as s,c as t,o as a,a5 as i}from"./chunks/framework.t2hUVk8X.js";const E=JSON.parse('{"title":"校验类函数 js-fastcode","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"dev/function/utils/validate.md","filePath":"dev/function/utils/validate.md","lastUpdated":1709812522000}'),e={name:"dev/function/utils/validate.md"},n=i(`<h1 id="校验类函数-js-fastcode" tabindex="-1">校验类函数 <a href="https://www.npmjs.com/package/js-fastcode" target="_blank" rel="noreferrer">js-fastcode</a> <a class="header-anchor" href="#校验类函数-js-fastcode" aria-label="Permalink to &quot;校验类函数 [js-fastcode](https://www.npmjs.com/package/js-fastcode)&quot;">​</a></h1><p>该文件是将常用的校验函数进行统一封装并发布到 npm 上，使用时安装依赖。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>npm  install  js-fastcode</span></span></code></pre></div><h2 id="_1、isexternal-path" tabindex="-1">1、isExternal(path) <a class="header-anchor" href="#_1、isexternal-path" aria-label="Permalink to &quot;1、isExternal(path)&quot;">​</a></h2><p>说明：</p><blockquote><p>校验是否以 https:|mailto:|tel: 开始的链接，接收一个参数 path</p></blockquote><p>参数：</p><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">是否必传</th><th style="text-align:center;">类型</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">path</td><td style="text-align:center;">必传</td><td style="text-align:center;">string</td><td style="text-align:center;">被校验的链接</td></tr></tbody></table><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 校验是以https开始的链接</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isExternal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://www.baidu.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 校验是以mailto开始的邮箱</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isExternal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mailto: 13333333@163.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 校验是以tel开始的手机号</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isExternal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tel:888826554&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="_2、checktel-tel" tabindex="-1">2、checkTel(tel) <a class="header-anchor" href="#_2、checktel-tel" aria-label="Permalink to &quot;2、checkTel(tel)&quot;">​</a></h2><p>说明：</p><blockquote><p>手机号格式校验，按照最新工信部颁发的手机号段进行匹配，接收一个参数 tel</p><p>只支持手机号，不支持固话</p></blockquote><p>参数：</p><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">是否必传</th><th style="text-align:center;">类型</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">tel</td><td style="text-align:center;">必传</td><td style="text-align:center;">number</td><td style="text-align:center;">需要输入校验的手机号</td></tr></tbody></table><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 校验手机号是否合法</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isExternal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;13266666666&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="_3、datatype-data" tabindex="-1">3、dataType(data) <a class="header-anchor" href="#_3、datatype-data" aria-label="Permalink to &quot;3、dataType(data)&quot;">​</a></h2><p>说明：</p><blockquote><p>检测数据类型，接收一个参数 data</p></blockquote><p>参数：</p><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">是否必传</th><th style="text-align:center;">类型</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">data</td><td style="text-align:center;">必传</td><td style="text-align:center;">any</td><td style="text-align:center;">检测 number,string,object 等数据类型</td></tr></tbody></table><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 返回数据类型</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dataType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;13266666666&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="_4、judgelistcomplete-list" tabindex="-1">4、judgeListComplete(list) <a class="header-anchor" href="#_4、judgelistcomplete-list" aria-label="Permalink to &quot;4、judgeListComplete(list)&quot;">​</a></h2><p>说明：</p><blockquote><p>数组对象表单数据提交时判断每一项都不能为空，接收一个参数 list。</p><p>该方法在循环数组的每一项进行验证使用的是 judgeObjectComplete()方法进行判断</p></blockquote><p>参数：</p><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">是否必传</th><th style="text-align:center;">类型</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">list</td><td style="text-align:center;">必传</td><td style="text-align:center;">array</td><td style="text-align:center;">对该数组进行循环校验</td></tr></tbody></table><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 空数组不能提交</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">judgeListComplete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 数组对象中有空值不能提交</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">judgeListComplete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([{ name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, age: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span></code></pre></div><h2 id="_5、isobjempty-obj" tabindex="-1">5、isObjEmpty(obj) <a class="header-anchor" href="#_5、isobjempty-obj" aria-label="Permalink to &quot;5、isObjEmpty(obj)&quot;">​</a></h2><p>说明：</p><blockquote><p>判断对象不为空，接收一个参数 obj。</p><p>返回 true 则不为空，否则为空</p></blockquote><p>参数：</p><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">是否必传</th><th style="text-align:center;">类型</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">obj</td><td style="text-align:center;">必传</td><td style="text-align:center;">object</td><td style="text-align:center;"></td></tr></tbody></table><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 传递空对象</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isObjEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({}); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 数组对象中有空值不能提交</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isObjEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, age: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><h2 id="_6、isrepeatvalue-arr-key" tabindex="-1">6、isRepeatValue(arr,key) <a class="header-anchor" href="#_6、isrepeatvalue-arr-key" aria-label="Permalink to &quot;6、isRepeatValue(arr,key)&quot;">​</a></h2><p>说明：</p><blockquote><p>判断数组对象中是否存在有重复的值，接收两个参数 arr 和 key。</p><p>返回 true 说明数组中有重复的值，否则没有。</p></blockquote><p>参数：</p><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">是否必传</th><th style="text-align:center;">类型</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">arr</td><td style="text-align:center;">必传</td><td style="text-align:center;">array</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">key</td><td style="text-align:center;">必传</td><td style="text-align:center;">string</td><td style="text-align:center;">根据该字段进行判断是否有重复的值</td></tr></tbody></table><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 判断数组中id值是否有重复值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isRepeatValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;yy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;id&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 数组对象中有空值不能提交</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isRepeatValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;yy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;id&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><h2 id="_7、isobjectvalueequal-obj1-obj2" tabindex="-1">7、isObjectValueEqual(obj1,obj2) <a class="header-anchor" href="#_7、isobjectvalueequal-obj1-obj2" aria-label="Permalink to &quot;7、isObjectValueEqual(obj1,obj2)&quot;">​</a></h2><p>说明：</p><blockquote><p>判断两个对象是否相等，接收两个参数 obj1 和 obj2。</p><p>返回 true 说明相等，否则不相等</p></blockquote><p>参数：</p><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">是否必传</th><th style="text-align:center;">类型</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">obj1</td><td style="text-align:center;">必传</td><td style="text-align:center;">object</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">obj2</td><td style="text-align:center;">必传</td><td style="text-align:center;">object</td><td style="text-align:center;"></td></tr></tbody></table><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 判断两个对象是否相同</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isObjectValueEqual</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;yy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 判断两个对象是否相同，两个对象顺序不同也返回true</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isObjectValueEqual</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, { id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div>`,52),l=[n];function h(p,k,d,r,c,o){return a(),t("div",null,l)}const y=s(e,[["render",h]]);export{E as __pageData,y as default};
