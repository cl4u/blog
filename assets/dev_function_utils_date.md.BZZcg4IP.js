import{_ as s,c as t,o as a,a5 as i}from"./chunks/framework.t2hUVk8X.js";const y=JSON.parse('{"title":"日期函数 js-fastcode","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"dev/function/utils/date.md","filePath":"dev/function/utils/date.md","lastUpdated":1709812522000}'),e={name:"dev/function/utils/date.md"},n=i(`<h1 id="日期函数-js-fastcode" tabindex="-1">日期函数 <a href="https://www.npmjs.com/package/js-fastcode" target="_blank" rel="noreferrer">js-fastcode</a> <a class="header-anchor" href="#日期函数-js-fastcode" aria-label="Permalink to &quot;日期函数 [js-fastcode](https://www.npmjs.com/package/js-fastcode)&quot;">​</a></h1><p>该文件是将常用的日期函数进行统一封装并发布到 npm 上，使用时安装依赖。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>npm  install  js-fastcode</span></span></code></pre></div><h2 id="_1、timeformate-type-timestamp" tabindex="-1">1、timeFormate([type,timeStamp]) <a class="header-anchor" href="#_1、timeformate-type-timestamp" aria-label="Permalink to &quot;1、timeFormate([type,timeStamp])&quot;">​</a></h2><p>说明：</p><blockquote><p>格式化日期时间，接收两个参数，type 和 timeStamp</p></blockquote><p>参数：</p><table><thead><tr><th>参数</th><th>是否必传</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>type</td><td>非必传</td><td>number</td><td>1、返回年月(YYYY-MM) <br>2、返回年月日(YYYY-MM-DD) <br>3、返回年月日时分秒(YYYY-MM-DD HH:mm:ss)</td></tr><tr><td>timeStamp</td><td>非必传</td><td>string 或者 number</td><td>如果传入该参数，则格式化传入的参数， 否则，默认使用当前时间</td></tr></tbody></table><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取当前时间年月</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timeFormate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取当前时间年月日</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timeFormate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取当前时间年月日时分秒</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timeFormate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取某天年月日时分秒,第二个参数支持字符串</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timeFormate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Thu Nov 23 2021 14:45:11 GMT+0800 (中国标准时间)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取某天年月日时分秒,第二个参数支持number</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timeFormate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1300721936550</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="_2、gettomorrow" tabindex="-1">2、getTomorrow() <a class="header-anchor" href="#_2、gettomorrow" aria-label="Permalink to &quot;2、getTomorrow()&quot;">​</a></h2><p>说明：</p><blockquote><p>获取明天的日期，返回年月日格式(YYYY-MM-DD)</p></blockquote><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取明天的日期</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTomorrow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h2 id="_3、getmonthdays-year-month" tabindex="-1">3、getMonthDays(year,month) <a class="header-anchor" href="#_3、getmonthdays-year-month" aria-label="Permalink to &quot;3、getMonthDays(year,month)&quot;">​</a></h2><p>说明：</p><blockquote><p>获取月份的天数，接收两个参数 year 和 month</p></blockquote><p>参数：</p><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">是否必传</th><th style="text-align:center;">类型</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">year</td><td style="text-align:center;">必传</td><td style="text-align:center;">string</td><td style="text-align:center;">&quot;YYYY&quot;</td></tr><tr><td style="text-align:center;">month</td><td style="text-align:center;">必传</td><td style="text-align:center;">number</td><td style="text-align:center;">number</td></tr></tbody></table><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取2023年2月的天数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMonthDays</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2023&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取2023年11月的天数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMonthDays</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2023&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="_4、gettenday-date" tabindex="-1">4、getTenday(date) <a class="header-anchor" href="#_4、gettenday-date" aria-label="Permalink to &quot;4、getTenday(date)&quot;">​</a></h2><p>说明：</p><blockquote><p>查询日期所在旬，接收一个参数 date</p><p>返回值：1 -&gt; 上旬，2 -&gt; 中旬，3 -&gt; 下旬</p></blockquote><p>参数：</p><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">是否必传</th><th style="text-align:center;">类型</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">date</td><td style="text-align:center;">必传</td><td style="text-align:center;">string，number</td><td style="text-align:center;">&quot;YYYY-MM-DD&quot;或者时间戳</td></tr></tbody></table><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取某天的旬类型</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTenday</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2023-03-11&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="_5、getquarter-date" tabindex="-1">5、getQuarter(date) <a class="header-anchor" href="#_5、getquarter-date" aria-label="Permalink to &quot;5、getQuarter(date)&quot;">​</a></h2><p>说明：</p><blockquote><p>查询月份所在的季度，接收一个参数 date</p><p>返回值：1 -&gt; 一季度，2 -&gt; 二季度，3 -&gt; 三季度，4 -&gt; 四季度</p></blockquote><p>参数：</p><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">是否必传</th><th style="text-align:center;">类型</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">date</td><td style="text-align:center;">必传</td><td style="text-align:center;">string，number</td><td style="text-align:center;">&quot;YYYY-MM-DD&quot;或者时间戳</td></tr></tbody></table><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取传入时间所在的季度</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getQuarter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2023-05-15&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="_6、getprevdate-num-type" tabindex="-1">6、getPrevDate(num[,type]) <a class="header-anchor" href="#_6、getprevdate-num-type" aria-label="Permalink to &quot;6、getPrevDate(num[,type])&quot;">​</a></h2><p>说明：</p><blockquote><p>获取 num 天前的日期，接收两个参数 num 和 type</p></blockquote><p>参数：</p><table><thead><tr><th>参数</th><th>是否必传</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>num</td><td>必传</td><td>number</td><td>传入要获取的天数</td></tr><tr><td>type</td><td>非必传</td><td>number</td><td>默认返回&quot;YYYY-MM-DD&quot; <br> 1、[&quot;YYYY-MM&quot;,&quot;DD&quot;] <br> 2、&quot;YYYY-MM-DD&quot;</td></tr></tbody></table><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取3天前的日期，返回数据类型为[&quot;YYYY-MM&quot;,&quot;DD&quot;]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPrevDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 结果是[&#39;2023-11&#39;, &#39;21&#39;]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取5天前的日期，返回数据类型是&quot;YYYY-MM-DD&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPrevDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 结果是&#39;2023-11-19&#39;</span></span></code></pre></div><h2 id="_7、getpremonth" tabindex="-1">7、getPreMonth() <a class="header-anchor" href="#_7、getpremonth" aria-label="Permalink to &quot;7、getPreMonth()&quot;">​</a></h2><p>说明：</p><blockquote><p>获取上个月月份，无需传参</p><p>返回值：&quot;YYYY-MM&quot;</p></blockquote><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取上个月月份</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPreMonth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 结果是&#39;2023-10&#39;</span></span></code></pre></div><h2 id="_8、getnextmonth" tabindex="-1">8、getNextMonth() <a class="header-anchor" href="#_8、getnextmonth" aria-label="Permalink to &quot;8、getNextMonth()&quot;">​</a></h2><p>说明：</p><blockquote><p>获取下个月月份，无需传参</p><p>返回值：&quot;YYYY-MM&quot;</p></blockquote><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取上个月月份</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getNextMonth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 结果是&#39;2023-12&#39;</span></span></code></pre></div><h2 id="_9、getotherdate-timetype-num-type-datetime" tabindex="-1">9、getOtherDate(timeType, num[, type, dateTime]) <a class="header-anchor" href="#_9、getotherdate-timetype-num-type-datetime" aria-label="Permalink to &quot;9、getOtherDate(timeType, num[, type, dateTime])&quot;">​</a></h2><p>说明：</p><blockquote><p>获取某一天的日期。接收四个参数，timeType, n, type, dateTime</p></blockquote><p>参数：</p><table><thead><tr><th>参数</th><th>是否必传</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>timeType</td><td>必传</td><td>number</td><td>1、表示未来的某一天 <br> 2、表示过去的某一 天</td></tr><tr><td>num</td><td>必传</td><td>number</td><td>表示未来/过去第几天 <br> 例如获取明天或昨天的日期，则 n 为 1，后天或者前天则 n 为 2...</td></tr><tr><td>dateTime</td><td>非必传</td><td>string,number</td><td>默认不传,如果传参，则以传参的日期为参照时间进行处理</td></tr><tr><td>type</td><td>非必传</td><td>number</td><td>默认返回&quot;YYYY-MM-DD&quot; <br> 1、[&quot;YYYY-MM&quot;,&quot;DD&quot;] <br>2、&quot;MM-DD&quot;</td></tr></tbody></table><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取三天之后的日期</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getOtherDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取4天之前的日期</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getOtherDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取5天之后的月日,第三个参数不需要时传入null</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getOtherDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取2023-11-02之后的3天，返回月日</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getOtherDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2023-11-02&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="_10、devidetimes-time-type-1" tabindex="-1">10、devideTimes(time[,type=1]) <a class="header-anchor" href="#_10、devidetimes-time-type-1" aria-label="Permalink to &quot;10、devideTimes(time[,type=1])&quot;">​</a></h2><p>说明：</p><blockquote><p>根据 time 将一天时间进行分割，接收一个参数 time</p><p>type=1,按照 15 分钟分割[00:15,00:30,00:45,01:00...]</p><p>type=2,按照 15 分钟分割[00:00,00:15,00:30,01:45...]</p><p>需要注意的是，如果时间跨度无法被整除，那么生成的时间区间可能无法完全覆盖 24 小时。</p></blockquote><p>参数：</p><table><thead><tr><th>参数</th><th>是否必传</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>time</td><td>必传</td><td>number</td><td>表示按照多长时间进行分割，单位是分钟</td></tr><tr><td>type</td><td>非必传</td><td>number</td><td>默认是 1，代表从 index+1 开始分割<br>2 代表从 index 分割</td></tr></tbody></table><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 以15分钟进行分割时间，从00:15开始</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">devideTimes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 以30分钟进行峰时间，从00:00开始</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">devideTimes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="_11、devideformattimes-time" tabindex="-1">11、devideFormatTimes(time) <a class="header-anchor" href="#_11、devideformattimes-time" aria-label="Permalink to &quot;11、devideFormatTimes(time)&quot;">​</a></h2><p>说明：</p><blockquote><p>根据 time 自动生成 24 小时时间区间，接收一个参数 time。</p><p>需要注意的是，如果时间跨度无法被整除，那么生成的时间区间可能无法完全覆盖 24 小时。</p></blockquote><p>参数：</p><table><thead><tr><th>参数</th><th>是否必传</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>time</td><td>必传</td><td>number</td><td>表示按照多长时间进行分割，单位是分钟 <br> 按照 15 分钟分割 [&quot;00:00-00:15&quot;,&quot;00:15-00:30&quot;...]<br> 按照 30 分钟分割 [&quot;00:00-00:30&quot;,&quot;00:30-01:00&quot;...]</td></tr></tbody></table><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 按照15分钟分割</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">devideFormatTimes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 按照60分钟分割</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">devideFormatTimes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="_12、gethourstimes" tabindex="-1">12、getHoursTimes() <a class="header-anchor" href="#_12、gethourstimes" aria-label="Permalink to &quot;12、getHoursTimes()&quot;">​</a></h2><p>说明：</p><blockquote><p>动态将一年的时间生成 8760 个小时的数组</p></blockquote><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 生成8760个小时</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getHoursTimes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h2 id="_13、diffdays-date1-date2" tabindex="-1">13、diffDays(date1,date2) <a class="header-anchor" href="#_13、diffdays-date1-date2" aria-label="Permalink to &quot;13、diffDays(date1,date2)&quot;">​</a></h2><p>说明：</p><blockquote><p>计算两个日期之间的天数，接收两个参数 date1 和 date2。</p></blockquote><p>参数：</p><table><thead><tr><th>参数</th><th>是否必传</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>date1</td><td>必传</td><td>number，string</td><td>&quot;YYYY-MM-DD&quot;或者时间戳</td></tr><tr><td>date2</td><td>必传</td><td>number，string</td><td>&quot;YYYY-MM-DD&quot;或者时间戳</td></tr></tbody></table><p>使用：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 计算2023-02-03和2023-10-10之间的天数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">diffDays</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2023-02-03&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2023-10-10&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 计算2023-02-03和2022-10-10之间的天数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">diffDays</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2023-02-03&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2022-10-10&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,86),p=[n];function h(l,d,k,r,o,g){return a(),t("div",null,p)}const E=s(e,[["render",h]]);export{y as __pageData,E as default};
